#!/usr/bin/env zsh
# Copyright (c) 2023 Sebastian Gniazdowski
#
# xzmap – extras function – map function/command to array
#

zsfilt() {

# Run as script?
integer bescript=${${0:#zsfilt}:+1}

# Set options
builtin emulate -L zsh -o extendedglob -o noshortloops \
                        -o warncreateglobal -o typesetsilent \
                        -o nopromptsubst

# Set $0 with a new trik - use of %x prompt expansion
0=${${(M)${0::=${(%):-%x}}:#/*}:-$PWD/$0}

typeset -gA Plugins
# Source init script
source "$0:h:h"/libexec/zs::global-init.zsh

# Cleanup on exit
trap "unset -f zs-filter ZSIO" EXIT
trap "unset -f zs-filter ZSIO;return 1" INT

# Input/options
local -A Opts
builtin zparseopts ${${(M)ZSH_VERSION:#(5.[8-9]|6.[0-9])}:+-F} -D -E -A Opts -- -fr z o v:||return 1

set -- "${@:#--}"
# Force output mode when script
((bescript))&&Opts[-o]=

# Get runnable or pattern to match
local PAT_OR_RUN=$1 MARR_VAR=$Opts[-v]
shift

# Is there any pattern or runnable to apply?
if [[ -z $PAT_OR_RUN ]];then
    zsmsg -e -h {err}Warning:{txt} No condition object, passing through
    return 1
fi

# Does runnable exist?
if (($+Opts[--fr]))&&! type $PAT_OR_RUN ZSIO; then
    zsmsg -h {err}Error:{txt} Couldn\'t find runnable: {cmd}$PAT_OR_RUN
    return 3
fi

# Is there any input?
if (($# <= 0));then
    zsmsg -h {err}Error:{txt} Missing arguments: the objects \
        to apply ·{cmd}$PAT_OR_RUN{txt}· on
    return 1
fi

# Initialize vars
REPLY= reply=()
local QE EC O

zs-filter()
{
    local QT=$1 PAT_OR_RUN=$2 QE=$3 MARR_VAR=$4 UNWIND
    local -a match=() mbegin=() mend=()
    integer RET
    if [[ $QT == 1 ]];then
        "$PAT_OR_RUN" "$QE" ZSIO
        RET=$?
    else
        # eval to expand global alias in $PAT_OR_RUN
        UNWIND=$galiases[$PAT_OR_RUN]
        eval "QE=\${(S)QE//#%$UNWIND/°match°}"
        [[ $QE == °match° ]]
        RET=$?
    fi
    ((!RET&&$#MARR_VAR))&&: ${(AP@)MARR_VAR::=$match[@]}
    return RET
}

if [[ -z $PAT_OR_RUN ]]|| \
    {! checks/zs::verify-check "$PAT_OR_RUN"&&((!$+Opts[--fr]));}
then
    zswarn Check {data}$PAT_OR_RUN{txt} couldn\'t be found
    return 0
fi
for QE; do
        if zs-filter $+Opts[--fr] "$PAT_OR_RUN" "$QE" "$MARR_VAR"; then
            EC+=0
            (($+Opts[-o]))&&builtin print -r -- "$QE"||reply+=("$QE")
        else
            (($+Opts[-z]))&&EC+=$(($?%10))
            # Meaning: output only when -z
            if (($+Opts[-o]&&$+Opts[-z]));then
                builtin print
            elif (($+Opts[-z]));then
                reply+=("")
            fi
        fi
done
REPLY=$EC

# At least 1 zero code exists?
[[ $REPLY != <1-9># ]]&&integer have_output=1

# If run as script, then output status string via stdout
((have_output&&$+Opts[-o]))&&builtin print -r -- $REPLY

return 1-have_output

}
